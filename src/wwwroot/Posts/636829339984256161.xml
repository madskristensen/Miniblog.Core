<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>.NET Dojo (WCF vs. *.asmx)</title>
  <slug>net-dojo-wcf-vs.-.asmx</slug>
  <pubDate>2012-03-31T23:55:00.000Z</pubDate>
  <lastModified>2019-01-12T23:53:18.425Z</lastModified>
  <excerpt />
  <content>&lt;p&gt;Recently I attended the &lt;b&gt;.NET Dojo&lt;/b&gt; event in Houston, where &lt;b&gt;Steven Fulcher &lt;/b&gt;talked about WCF and its implementation. Early on, I found myself trying to figure out how I, as an ASP.NET developer already using *.asmx services, would truly benefit from this technology. At first glance, you might take it as a proprietary wrapper for SOAP, POX (plain old xml), REST and other web programming models that already exist. However, as we plowed forward through the examples and hands-on labs, the power and flexibility gained by adding WCF to your distributed architecture becomes prevalent. &lt;/p&gt;  &lt;p&gt;I won’t go into a lot of detail but simply point out the feature that stands out to me, &lt;b&gt;WCF Security&lt;/b&gt;. &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;By making simple configuration changes, the data returned by your service can be encrypted, even over HTTP.&lt;/p&gt;    &lt;pre class="csharpcode"&gt;…other stuff here
&lt;span class="kwrd"&gt;&amp;lt;&lt;/span&gt;&lt;span class="html"&gt;endpoint&lt;/span&gt; &lt;span class="attr"&gt;address&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;&amp;quot;&lt;/span&gt;
            &lt;span class="attr"&gt;binding&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;wsHttpBinding&amp;quot;&lt;/span&gt;
            &lt;span class="attr"&gt;contract&lt;/span&gt;&lt;span class="kwrd"&gt;=&amp;quot;MyService.IMyServiceInterface&amp;quot;&lt;/span&gt; &lt;span class="kwrd"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="kwrd"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="html"&gt;service&lt;/span&gt;&lt;span class="kwrd"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kwrd"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="html"&gt;services&lt;/span&gt;&lt;span class="kwrd"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kwrd"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="html"&gt;system.serviceModel&lt;/span&gt;&lt;span class="kwrd"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="csharpcode"&gt;&lt;span class="kwrd"&gt;&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;style type="text/css"&gt;.csharpcode, .csharpcode pre { font-size: small; color: black; font-family: consolas, "Courier New", courier, monospace; background-color: #ffffff; /*white-space: pre;*/ } .csharpcode pre { margin: 0em; } .csharpcode .rem { color: #008000; } .csharpcode .kwrd { color: #0000ff; } .csharpcode .str { color: #006080; } .csharpcode .op { color: #0000c0; } .csharpcode .preproc { color: #cc6633; } .csharpcode .asp { background-color: #ffff00; } .csharpcode .html { color: #800000; } .csharpcode .attr { color: #ff0000; } .csharpcode .alt { background-color: #f4f4f4; width: 100%; margin: 0em; } .csharpcode .lnum { color: #606060; } &lt;/style&gt;&lt;/p&gt;

&lt;p&gt;By modifying the &lt;b&gt;endpoint configuration&lt;/b&gt; in your &lt;b&gt;web.config&lt;/b&gt; or &lt;b&gt;app.config&lt;/b&gt; , depending on what type of service host you choose, setting its binding to “&lt;b&gt;wsHttpBinding&lt;/b&gt;”, you will &lt;b&gt;encrypt&lt;/b&gt; the data. This is something that isn’t possible via the *.asmx services that are currently being used in many applications.&lt;/p&gt;



&lt;p&gt;There are many tutorials and labs available at: &lt;a href="http://msdn.microsoft.com/en-us/netframework/aa663324.aspx"&gt;http://msdn.microsoft.com/en-us/netframework/aa663324.aspx&lt;/a&gt; so take a look.&lt;/p&gt;</content>
  <ispublished>true</ispublished>
  <categories>
    <category>.net</category>
    <category>programming</category>
  </categories>
  <comments></comments>
</post>